import React, { useState, useEffect, useMemo } from 'react';
import { Button } from '@/components/ui/button';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { useEnhancedBattleStore } from '@/stores/enhancedBattleStore';
import { useAssetsStore } from '@/stores/assetsStore';

export const EquipmentPanel: React.FC = () => {
  const { tokens, addToken } = useEnhancedBattleStore();
  const { assets, categories, loadAll } = useAssetsStore();
  const [selectedAssetId, setSelectedAssetId] = useState('');

  useEffect(() => {
    loadAll();
  }, [loadAll]);

  const selectedAsset = useMemo(() => {
    return assets.find(asset => asset.id === selectedAssetId);
  }, [assets, selectedAssetId]);

  const categoriesById = useMemo(() => {
    return categories.reduce((acc, cat) => {
      acc[cat.id] = cat.name;
      return acc;
    }, {} as Record<string, string>);
  }, [categories]);

  const approvedAssets = useMemo(() => {
    return assets.filter(asset => asset.approved);
  }, [assets]);

  const handleAddAsset = (asset: any) => {
    console.log('üì¶ Adding asset:', asset);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL –¥–ª—è –º–æ–¥–µ–ª–∏ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
    const modelUrl = asset.storage_path ? `https://mqdjwhjtvjnktobgruuu.supabase.co/storage/v1/object/public/models/${asset.storage_path}` : undefined;
    
    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∏ –ø–æ–∑–∏—Ü–∏—é
    const newToken = {
      id: `${asset.name.toLowerCase().replace(/\s+/g, '_')}-${Date.now()}`,
      name: asset.name,
      hp: 100,
      maxHp: 100,
      ac: 14,
      position: [
        Math.random() * 20 - 10, // —Å–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è X –æ—Ç -10 –¥–æ 10
        0,
        Math.random() * 20 - 10  // —Å–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è Z –æ—Ç -10 –¥–æ 10
      ] as [number, number, number],
      conditions: [],
      isEnemy: false,
      modelUrl: modelUrl, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL
      scale: 1
    };
    
    console.log('üì¶ Adding token with modelUrl:', modelUrl);
    addToken(newToken);
    console.log('‚úÖ Token added:', newToken.id);
    setSelectedAssetId('');
  };

  return (
    <Card className="w-80 bg-background/95 backdrop-blur-sm border-primary/20">
      <CardHeader className="pb-3">
        <CardTitle className="text-lg">–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π</CardTitle>
        <div className="text-sm text-muted-foreground">
          –í—ã–±–µ—Ä–∏—Ç–µ 3D –º–æ–¥–µ–ª–∏ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç—É
        </div>
      </CardHeader>
      <CardContent className="space-y-4">
        {/* –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∞—Å—Å–µ—Ç–æ–≤ */}
        <div className="space-y-3">
          <h4 className="text-sm font-medium">3D –ú–æ–¥–µ–ª–∏</h4>
          <div className="grid grid-cols-2 gap-2 max-h-60 overflow-y-auto">
            {approvedAssets.map((asset) => (
              <Button
                key={asset.id}
                variant="outline"
                className="h-auto p-3 flex flex-col items-center gap-2 text-xs"
                onClick={() => handleAddAsset(asset)}
              >
                <div className="text-center">
                  <div className="font-medium">{asset.name}</div>
                  {categoriesById[asset.category_id] && (
                    <Badge variant="secondary" className="text-xs mt-1">
                      {categoriesById[asset.category_id]}
                    </Badge>
                  )}
                </div>
              </Button>
            ))}
          </div>
        </div>

        {/* –¢–µ–∫—É—â–∏–µ —Ç–æ–∫–µ–Ω—ã */}
        <div className="space-y-2">
          <h4 className="text-sm font-medium">–¢–æ–∫–µ–Ω—ã –Ω–∞ –∫–∞—Ä—Ç–µ ({tokens.length})</h4>
          <div className="max-h-32 overflow-y-auto space-y-1">
            {tokens.map((token) => (
              <div key={token.id} className="flex items-center justify-between p-2 bg-muted rounded text-sm">
                <div className="flex items-center gap-2">
                  <div className={`w-2 h-2 rounded-full ${
                    token.isEnemy ? 'bg-red-500' : 'bg-blue-500'
                  }`} />
                  <span>{token.name}</span>
                </div>
                <span className="text-xs text-muted-foreground">
                  {token.hp}/{token.maxHp} HP
                </span>
              </div>
            ))}
          </div>
        </div>

        {/* Instructions */}
        <div className="text-xs text-muted-foreground space-y-1">
          <p>‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ 3D –º–æ–¥–µ–ª—å —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ—ë –Ω–∞ –∫–∞—Ä—Ç—É</p>
          <p>‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–π —Ç–æ–∫–µ–Ω –º–æ–∂–Ω–æ –ø–µ—Ä–µ–º–µ—â–∞—Ç—å –º—ã—à—å—é</p>
          <p>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HUD –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ–µ–º</p>
        </div>
      </CardContent>
    </Card>
  );
};