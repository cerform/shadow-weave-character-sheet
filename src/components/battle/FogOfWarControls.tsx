// –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—É–º–∞–Ω–æ–º –≤–æ–π–Ω—ã –¥–ª—è –î–ú
import React from 'react';
import { useFogOfWarStore } from '@/stores/fogOfWarStore';
import { useUnifiedBattleStore } from '@/stores/unifiedBattleStore';

export const FogOfWarControls: React.FC = () => {
  const { 
    spawnPoints, 
    playerVisionRadius, 
    revealOnMove,
    maxSpawnPoints,
    clearAllFog,
    resetFog,
    removeSpawnPoint,
    assignPlayerToSpawn
  } = useFogOfWarStore();
  
  const { isDM, tokens } = useUnifiedBattleStore();
  
  if (!isDM) return null;
  
  const playerTokens = tokens.filter(t => !t.isEnemy);
  
  return (
    <div className="space-y-4">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-yellow-400 font-semibold tracking-wide uppercase text-xs">
        –¢—É–º–∞–Ω –≤–æ–π–Ω—ã
      </div>
      
      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      <div className="space-y-3">
        <div className="flex items-center gap-2 text-sm">
          <span className="opacity-70 w-32">–†–∞–¥–∏—É—Å –≤–∏–¥–∏–º–æ—Å—Ç–∏</span>
          <input 
            type="range" 
            min={1} 
            max={10} 
            value={playerVisionRadius} 
            onChange={(e) => useFogOfWarStore.setState({ playerVisionRadius: parseInt(e.target.value) })}
            className="w-full"
          />
          <span className="w-8 text-right">{playerVisionRadius}</span>
        </div>
        
        <div className="flex items-center gap-2">
          <input 
            id="revealOnMove" 
            type="checkbox" 
            checked={revealOnMove} 
            onChange={(e) => useFogOfWarStore.setState({ revealOnMove: e.target.checked })}
          />
          <label htmlFor="revealOnMove" className="text-sm">
            –û—Ç–∫—Ä—ã–≤–∞—Ç—å —Ç—É–º–∞–Ω –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –∏–≥—Ä–æ–∫–æ–≤
          </label>
        </div>
      </div>
      
      {/* –¢–æ—á–∫–∏ —Å–ø–∞–≤–Ω–∞ */}
      <div className="space-y-2">
        <div className="text-sm font-medium text-emerald-400">
          –¢–æ—á–∫–∏ —Å–ø–∞–≤–Ω–∞ –∏–≥—Ä–æ–∫–æ–≤ ({spawnPoints.length}/{maxSpawnPoints})
        </div>
        
        <div className="text-xs opacity-70 mb-2">
          –ö–ª–∏–∫–Ω–∏—Ç–µ –ø–æ –∫–∞—Ä—Ç–µ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É —Å–ø–∞–≤–Ω–∞
        </div>
        
        {spawnPoints.length === 0 ? (
          <div className="text-xs opacity-50 italic">
            –ù–µ—Ç —Ç–æ—á–µ–∫ —Å–ø–∞–≤–Ω–∞. –ö–ª–∏–∫–Ω–∏—Ç–µ –ø–æ –∫–∞—Ä—Ç–µ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å.
          </div>
        ) : (
          <div className="space-y-2 max-h-32 overflow-y-auto">
            {spawnPoints.map((spawn, index) => (
              <div key={spawn.id} className="flex items-center gap-2 p-2 bg-neutral-800 rounded-md">
                <div className="flex-1">
                  <div className="text-xs font-medium">
                    –¢–æ—á–∫–∞ {index + 1}
                    {spawn.playerId && (
                      <span className="ml-1 text-emerald-400">
                        (–∑–∞–Ω—è—Ç–∞)
                      </span>
                    )}
                  </div>
                  <div className="text-xs opacity-70">
                    {Math.round(spawn.x)}, {Math.round(spawn.y)}
                  </div>
                </div>
                
                {/* –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ */}
                <select
                  value={spawn.playerId || ''}
                  onChange={(e) => {
                    if (e.target.value) {
                      assignPlayerToSpawn(spawn.id, e.target.value);
                    }
                  }}
                  className="text-xs bg-neutral-700 border border-neutral-600 rounded px-1 py-0.5"
                >
                  <option value="">–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω</option>
                  {playerTokens.map(token => (
                    <option key={token.id} value={token.id}>
                      {token.name}
                    </option>
                  ))}
                </select>
                
                <button
                  onClick={() => removeSpawnPoint(spawn.id)}
                  className="text-red-400 hover:text-red-300 text-xs px-1"
                  title="–£–¥–∞–ª–∏—Ç—å —Ç–æ—á–∫—É —Å–ø–∞–≤–Ω–∞"
                >
                  ‚úï
                </button>
              </div>
            ))}
          </div>
        )}
      </div>
      
      {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—É–º–∞–Ω–æ–º */}
      <div className="space-y-2">
        <div className="text-sm font-medium text-blue-400">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—É–º–∞–Ω–æ–º</div>
        
        <div className="flex gap-2">
          <button
            onClick={clearAllFog}
            className="px-3 py-1 rounded-md border border-neutral-600 text-xs hover:bg-neutral-700 transition-colors"
          >
            –£–±—Ä–∞—Ç—å –≤–µ—Å—å —Ç—É–º–∞–Ω
          </button>
          
          <button
            onClick={resetFog}
            className="px-3 py-1 rounded-md border border-neutral-600 text-xs hover:bg-neutral-700 transition-colors"
          >
            –ó–∞–∫—Ä—ã—Ç—å –≤—Å—ë —Ç—É–º–∞–Ω–æ–º
          </button>
        </div>
      </div>
      
      {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π –º–æ–¥–µ–ª–µ–π */}
      <div className="space-y-2">
        <div className="text-sm font-medium text-purple-400">3D –ú–æ–¥–µ–ª–∏ Meshy.ai</div>
        
        <button
          onClick={() => {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª–∏ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Characters
            console.log('–ó–∞–≥—Ä—É–∑–∫–∞ D&D –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∏–∑ Meshy.ai');
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –º–∞—Å—Å–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
          }}
          className="w-full px-3 py-2 rounded-md border border-purple-600 text-purple-400 hover:bg-purple-600/10 transition-colors text-sm"
        >
          üé≠ –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π D&D
        </button>
        
        <div className="text-xs opacity-60">
          –ò—Å—Ç–æ—á–Ω–∏–∫: meshy.ai/tags/dnd?category=Characters
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="space-y-1 text-xs opacity-70">
        <div>üîµ –°–∏–Ω–∏–µ —Ç–æ—á–∫–∏ - —Å–≤–æ–±–æ–¥–Ω—ã–µ —Ç–æ—á–∫–∏ —Å–ø–∞–≤–Ω–∞</div>
        <div>üü¢ –ó–µ–ª—ë–Ω—ã–µ —Ç–æ—á–∫–∏ - –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞–º</div>
        <div>üå´Ô∏è –ò–≥—Ä–æ–∫–∏ –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ –æ–±–ª–∞—Å—Ç–∏ –≤–æ–∫—Ä—É–≥ —Å–≤–æ–∏—Ö —Ç–æ–∫–µ–Ω–æ–≤</div>
        <div>‚öîÔ∏è –ü—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ —Å –º–æ–Ω—Å—Ç—Ä–∞–º–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –±–æ–π</div>
        <div>üéØ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–¢–æ—á–∫–∏ —Å–ø–∞–≤–Ω–∞" –Ω–∞ –∫–∞—Ä—Ç–µ</div>
      </div>
    </div>
  );
};