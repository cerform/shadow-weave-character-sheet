import React, { useState, useEffect } from 'react';
import { PlayerProfile } from './PlayerProfile';
import { PlayerActionsPanel } from './PlayerActionsPanel';
import { PlayerTokensList } from './PlayerTokensList';
import { VideoChatMini } from './VideoChatMini';
import { CombatLogMini } from './CombatLogMini';
import BattleMap2DPlayer from '../BattleMap2DPlayer';
import { PlayerBattleInterfaceMobile } from './PlayerBattleInterfaceMobile';
import { EnhancedToken, useEnhancedBattleStore } from '@/stores/enhancedBattleStore';
import { useAuth } from '@/hooks/use-auth';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Video, VideoOff, Users, Eye, EyeOff, Smartphone, Monitor } from 'lucide-react';
import { ScrollArea } from '@/components/ui/scroll-area';
import { useFogSync } from '@/hooks/useFogSync';
import { useIsMobile } from '@/hooks/use-mobile';

interface PlayerBattleInterfaceProps {
  sessionId: string;
  sessionCode?: string;
}

export const PlayerBattleInterface: React.FC<PlayerBattleInterfaceProps> = ({
  sessionId,
  sessionCode
}) => {
  const { user } = useAuth();
  const { tokens, mapImageUrl, addToken, updateToken, combatLog } = useEnhancedBattleStore();
  const [showVideoChat, setShowVideoChat] = useState(true);
  const [showTokensList, setShowTokensList] = useState(true);
  const [showCombatLog, setShowCombatLog] = useState(true);
  const isMobileDevice = useIsMobile();
  const [forceMobileMode, setForceMobileMode] = useState(false);
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏ –º–æ–±–∏–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
  const useMobileMode = forceMobileMode || isMobileDevice;
  
  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç—É–º–∞–Ω–∞ –≤–æ–π–Ω—ã –¥–ª—è –∏–≥—Ä–æ–∫–∞
  // –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º main-map –¥–ª—è —Ç–µ–∫—É—â–µ–π –∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ä—Ç—ã —Å–µ—Å—Å–∏–∏
  const mapId = 'main-map';
  useFogSync(sessionId, mapId);
  
  // –û—á–∏—â–∞–µ–º —Ç—É–º–∞–Ω –≤–æ–π–Ω—ã –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–∞—Ä—Ç—ã
  useEffect(() => {
    console.log('üéÆ [PLAYER] Session ID:', sessionId);
    console.log('üéÆ [PLAYER] User ID:', user?.id);
    console.log('üó∫Ô∏è [PLAYER] Map ID:', mapId);
    console.log('üó∫Ô∏è [PLAYER] Map URL:', mapImageUrl);
  }, [sessionId, user, mapId, mapImageUrl]);

  // –ù–∞–π—Ç–∏ —Ç–æ–∫–µ–Ω –∏–≥—Ä–æ–∫–∞
  const playerToken = tokens.find(t => t.owner_id === user?.id && !t.is_summoned);
  
  // –í—Å–µ –≤–∏–¥–∏–º—ã–µ —Ç–æ–∫–µ–Ω—ã (–ø–µ—Ä—Å–æ–Ω–∞–∂–∏ + –ø—Ä–∏–∑–≤–∞–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤–∞ –∏–≥—Ä–æ–∫–∞)
  const visibleTokens = tokens.filter(t => 
    t.isVisible && (!t.isEnemy || t.owner_id === user?.id)
  );

  const handleAvatarUpdate = (url: string) => {
    if (playerToken) {
      updateToken(playerToken.id, { avatarUrl: url, image_url: url });
    }
  };

  const handleAction = (actionType: string, data?: any) => {
    console.log('Player action:', actionType, data);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π DM
  };

  // –ï—Å–ª–∏ –º–æ–±–∏–ª—å–Ω—ã–π —Ä–µ–∂–∏–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  if (useMobileMode) {
    return (
      <>
        {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ */}
        <div className="fixed top-4 right-4 z-50">
          <Button
            variant="outline"
            size="icon"
            onClick={() => setForceMobileMode(!forceMobileMode)}
            className="bg-background/95 backdrop-blur-sm"
          >
            {forceMobileMode ? <Monitor className="h-4 w-4" /> : <Smartphone className="h-4 w-4" />}
          </Button>
        </div>
        
        <PlayerBattleInterfaceMobile
          sessionId={sessionId}
          sessionCode={sessionCode}
        />
      </>
    );
  }

  return (
    <div className="h-screen flex bg-background relative">
      {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
      <div className="fixed top-4 right-4 z-50">
        <Button
          variant="outline"
          size="icon"
          onClick={() => setForceMobileMode(!forceMobileMode)}
          className="bg-background/95 backdrop-blur-sm"
        >
          <Smartphone className="h-4 w-4" />
        </Button>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç - full height */}
      <div className="flex-1 flex overflow-hidden">
        {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –ø—Ä–æ—Ñ–∏–ª—å –∏ –≥—Ä—É–ø–ø–∞ - —Å–∫—Ä—ã—Ç–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */}
        <div className="hidden lg:flex w-80 border-r border-border flex-col">
          <ScrollArea className="flex-1 p-4">
            <div className="space-y-4">
              {/* –ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞ */}
              <PlayerProfile
                token={playerToken}
                sessionId={sessionId}
                onAvatarUpdate={handleAvatarUpdate}
              />

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏ */}
              {sessionCode && (
                <Card>
                  <CardContent className="py-3 space-y-2">
                    <div className="text-xs text-muted-foreground">
                      –ö–æ–¥ —Å–µ—Å—Å–∏–∏:
                    </div>
                    <div className="font-mono font-bold text-lg text-center p-2 bg-primary/10 rounded">
                      {sessionCode}
                    </div>
                  </CardContent>
                </Card>
              )}

              {/* –°–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω–æ–≤ –≥—Ä—É–ø–ø—ã */}
              {showTokensList && (
                <PlayerTokensList
                  tokens={visibleTokens}
                  currentToken={playerToken}
                />
              )}
            </div>
          </ScrollArea>

          {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
          <div className="p-4 border-t border-border space-y-2">
            <Button
              variant={showVideoChat ? 'default' : 'outline'}
              size="sm"
              onClick={() => setShowVideoChat(!showVideoChat)}
              className="w-full"
            >
              {showVideoChat ? <VideoOff className="h-4 w-4 mr-2" /> : <Video className="h-4 w-4 mr-2" />}
              {showVideoChat ? '–°–∫—Ä—ã—Ç—å –∫–∞–º–µ—Ä—ã' : '–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–º–µ—Ä—ã'}
            </Button>
            <Button
              variant={showTokensList ? 'default' : 'outline'}
              size="sm"
              onClick={() => setShowTokensList(!showTokensList)}
              className="w-full"
            >
              <Users className="h-4 w-4 mr-2" />
              {showTokensList ? '–°–∫—Ä—ã—Ç—å –≥—Ä—É–ø–ø—É' : '–ü–æ–∫–∞–∑–∞—Ç—å –≥—Ä—É–ø–ø—É'}
            </Button>
            <Button
              variant={showCombatLog ? 'default' : 'outline'}
              size="sm"
              onClick={() => setShowCombatLog(!showCombatLog)}
              className="w-full"
            >
              {showCombatLog ? <EyeOff className="h-4 w-4 mr-2" /> : <Eye className="h-4 w-4 mr-2" />}
              {showCombatLog ? '–°–∫—Ä—ã—Ç—å –ª–æ–≥' : '–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥'}
            </Button>
          </div>
        </div>

        {/* –¶–µ–Ω—Ç—Ä - –∫–∞—Ä—Ç–∞ */}
        <div className="flex-1 flex flex-col">
          {/* –ö–∞—Ä—Ç–∞ - –∑–∞–Ω–∏–º–∞–µ—Ç –≤–µ—Å—å —ç–∫—Ä–∞–Ω –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */}
          <div className="flex-1 relative">
            <BattleMap2DPlayer
              sessionId={sessionId}
              mapImageUrl={mapImageUrl}
              tokens={visibleTokens}
            />
          </div>

          {/* –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å - –¥–µ–π—Å—Ç–≤–∏—è - —Å–∫—Ä—ã—Ç–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */}
          <div className="hidden lg:block border-t border-border flex-shrink-0">
            <PlayerActionsPanel
              token={playerToken}
              sessionId={sessionId}
              onAction={handleAction}
              onSummon={addToken}
            />
          </div>
        </div>

        {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è - —Å–∫—Ä—ã—Ç–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö */}
        <div className="hidden lg:flex w-80 border-l border-border flex-col">
          {/* –í–∏–¥–µ–æ—á–∞—Ç */}
          {showVideoChat && (
            <div className="h-64 border-b border-border flex-shrink-0">
              <VideoChatMini
                sessionId={sessionId}
                playerName={playerToken?.name || '–ò–≥—Ä–æ–∫'}
                isDM={false}
              />
            </div>
          )}
          
          {/* –õ–æ–≥ –±–æ—è */}
          {showCombatLog && (
            <div className="flex-1 min-h-0">
              <CombatLogMini events={combatLog} />
            </div>
          )}
        </div>
      </div>

      {/* –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="lg:hidden fixed bottom-0 left-0 right-0 bg-background border-t border-border z-50">
        <PlayerActionsPanel
          token={playerToken}
          sessionId={sessionId}
          onAction={handleAction}
          onSummon={addToken}
        />
      </div>
    </div>
  );
};
