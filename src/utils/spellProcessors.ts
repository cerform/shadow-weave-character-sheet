
/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è
 */
export const parseComponents = (componentString: string): {
  verbal: boolean;
  somatic: boolean;
  material: boolean;
  ritual: boolean;
} => {
  return {
    verbal: componentString.includes('–í'),
    somatic: componentString.includes('–°'),
    material: componentString.includes('–ú'),
    ritual: componentString.includes('–†')
  };
};

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –æ–±—ä–µ–∫—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ —Å—Ç—Ä–æ–∫—É
 */
export const componentsToString = (components: {
  verbal?: boolean;
  somatic?: boolean;
  material?: boolean;
  ritual?: boolean;
  concentration?: boolean;
}): string => {
  let result = '';
  if (components.verbal) result += '–í';
  if (components.somatic) result += '–°';
  if (components.material) result += '–ú';
  if (components.ritual) result += '–†';
  if (components.concentration) result += '–ö';
  return result;
};

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
 */
export const spellLevelToText = (level: number): string => {
  switch(level) {
    case 0: return '–ó–∞–≥–æ–≤–æ—Ä';
    case 1: return '1-–π —É—Ä–æ–≤–µ–Ω—å';
    case 2: return '2-–π —É—Ä–æ–≤–µ–Ω—å';
    case 3: return '3-–π —É—Ä–æ–≤–µ–Ω—å';
    case 4: return '4-–π —É—Ä–æ–≤–µ–Ω—å';
    case 5: return '5-–π —É—Ä–æ–≤–µ–Ω—å';
    case 6: return '6-–π —É—Ä–æ–≤–µ–Ω—å';
    case 7: return '7-–π —É—Ä–æ–≤–µ–Ω—å';
    case 8: return '8-–π —É—Ä–æ–≤–µ–Ω—å';
    case 9: return '9-–π —É—Ä–æ–≤–µ–Ω—å';
    default: return `${level}-–π —É—Ä–æ–≤–µ–Ω—å`;
  }
};

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—ã –º–∞–≥–∏–∏ –≤ –∏–∫–æ–Ω–∫—É –∏–ª–∏ —Ü–≤–µ—Ç–æ–≤–æ–π –∫–æ–¥
 */
export const getSchoolIcon = (school: string): string => {
  switch(school.toLowerCase()) {
    case '–≤—ã–∑–æ–≤': return 'üî•';
    case '–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ': return 'üíû';
    case '–ø—Ä–æ—Ä–∏—Ü–∞–Ω–∏–µ': return 'üîÆ';
    case '–∏–ª–ª—é–∑–∏—è': return '‚ú®';
    case '–Ω–µ–∫—Ä–æ–º–∞–Ω—Ç–∏—è': return 'üíÄ';
    case '–æ–≥—Ä–∞–∂–¥–µ–Ω–∏–µ': return 'üõ°Ô∏è';
    case '–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ': return 'üßô‚Äç‚ôÇÔ∏è';
    case '–≤–æ–ø–ª–æ—â–µ–Ω–∏–µ': return '‚ö°';
    default: return 'üìö';
  }
};

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–≤–µ—Ç –¥–ª—è —à–∫–æ–ª—ã –º–∞–≥–∏–∏
 */
export const getSchoolColor = (school: string): string => {
  switch(school.toLowerCase()) {
    case '–≤—ã–∑–æ–≤': return '#ff7043';
    case '–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ': return '#ec407a';
    case '–ø—Ä–æ—Ä–∏—Ü–∞–Ω–∏–µ': return '#7e57c2';
    case '–∏–ª–ª—é–∑–∏—è': return '#26c6da';
    case '–Ω–µ–∫—Ä–æ–º–∞–Ω—Ç–∏—è': return '#546e7a';
    case '–æ–≥—Ä–∞–∂–¥–µ–Ω–∏–µ': return '#66bb6a';
    case '–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ': return '#ffca28';
    case '–≤–æ–ø–ª–æ—â–µ–Ω–∏–µ': return '#42a5f5';
    default: return '#9e9e9e';
  }
};
