import { useEffect } from 'react';
import { supabase } from '@/integrations/supabase/client';
import { useEnhancedBattleStore } from '@/stores/enhancedBattleStore';
import { useToast } from '@/hooks/use-toast';

/**
 * –•—É–∫ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã –±–æ—è –º–µ–∂–¥—É –º–∞—Å—Ç–µ—Ä–æ–º –∏ –∏–≥—Ä–æ–∫–∞–º–∏
 * –î–õ–Ø –ò–ì–†–û–ö–û–í: –∑–∞–≥—Ä—É–∂–∞–µ—Ç URL –∫–∞—Ä—Ç—ã –∏–∑ game_sessions
 * –î–õ–Ø –ú–ê–°–¢–ï–†–ê: –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –º–∞—Å—Ç–µ—Ä —É–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞—Ä—Ç–æ–π —á–µ—Ä–µ–∑ useBattleSession
 */
export const useBattleMapSync = (sessionId: string, isDM: boolean) => {
  const { setMapImageUrl } = useEnhancedBattleStore();
  const { toast } = useToast();

  // –ò–≥—Ä–æ–∫–∏ –ø–æ–ª—É—á–∞—é—Ç URL –∫–∞—Ä—Ç—ã –∏–∑ game_sessions
  useEffect(() => {
    if (isDM || !sessionId) return;

    const loadMapUrl = async () => {
      try {
        console.log('üó∫Ô∏è [PLAYER] –ó–∞–≥—Ä—É–∑–∫–∞ URL –∫–∞—Ä—Ç—ã –¥–ª—è —Å–µ—Å—Å–∏–∏:', sessionId);
        
        const { data, error } = await supabase
          .from('game_sessions')
          .select('current_map_url, updated_at')
          .eq('id', sessionId)
          .single();

        if (error) {
          console.error('‚ùå [PLAYER] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ URL –∫–∞—Ä—Ç—ã:', error);
          setMapImageUrl(null);
          return;
        }

        console.log('üì¶ [PLAYER] –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏:', data);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ä—Ç—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if (data?.current_map_url) {
          console.log('‚úÖ [PLAYER] URL –∫–∞—Ä—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', data.current_map_url);
          setMapImageUrl(data.current_map_url);
        } else {
          console.log('‚ÑπÔ∏è [PLAYER] –£ —Å–µ—Å—Å–∏–∏ –Ω–µ—Ç –∫–∞—Ä—Ç—ã (current_map_url –ø—É—Å—Ç–æ–π)');
          setMapImageUrl(null);
        }
      } catch (error) {
        console.error('‚ùå [PLAYER] –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ URL –∫–∞—Ä—Ç—ã:', error);
        setMapImageUrl(null);
      }
    };

    loadMapUrl();

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è URL –∫–∞—Ä—Ç—ã –≤ game_sessions
    console.log('üì° [PLAYER] –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç—ã –¥–ª—è —Å–µ—Å—Å–∏–∏:', sessionId);
    const channel = supabase
      .channel(`map-sync-player-${sessionId}`)
      .on(
        'postgres_changes',
        {
          event: 'UPDATE',
          schema: 'public',
          table: 'game_sessions',
          filter: `id=eq.${sessionId}`
        },
        (payload) => {
          console.log('üîÑ [PLAYER] Real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ game_sessions:', payload);
          const newMapUrl = (payload.new as any).current_map_url;
          
          console.log('üó∫Ô∏è [PLAYER] –ù–æ–≤—ã–π URL –∫–∞—Ä—Ç—ã –∏–∑ real-time:', newMapUrl);
          
          if (newMapUrl) {
            console.log('‚úÖ [PLAYER] –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É:', newMapUrl);
            setMapImageUrl(newMapUrl);
            toast({
              title: "–ö–∞—Ä—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞",
              description: "–ú–∞—Å—Ç–µ—Ä —Å–º–µ–Ω–∏–ª –∫–∞—Ä—Ç—É –±–æ—è",
            });
          } else {
            console.log('‚ÑπÔ∏è [PLAYER] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–∑ –∫–∞—Ä—Ç—ã (current_map_url –ø—É—Å—Ç–æ–π)');
            setMapImageUrl(null);
          }
        }
      )
      .subscribe((status) => {
        console.log('üì° [PLAYER] –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞—Ä—Ç—É:', status);
      });

    return () => {
      console.log('üîï [PLAYER] –û—Ç–ø–∏—Å–∫–∞ –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–∞—Ä—Ç—ã');
      supabase.removeChannel(channel);
    };
  }, [sessionId, isDM, setMapImageUrl, toast]);

  // –î–õ–Ø –ú–ê–°–¢–ï–†–ê: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ–π –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ useBattleSession + currentMap
  // –≠—Ç–æ—Ç —Ö—É–∫ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞ –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
};
