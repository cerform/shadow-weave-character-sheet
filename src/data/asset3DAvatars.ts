// –ê–≤–∞—Ç–∞—Ä—ã –¥–ª—è 3D –∞—Å—Å–µ—Ç–æ–≤ - –Ω–∞ –æ—Å–Ω–æ–≤–µ storage_path
export interface Asset3DAvatar {
  name: string;
  emoji: string;
  color: string;
  backgroundColor: string;
  category: 'monster' | 'character' | 'structure' | 'item';
  size: 'tiny' | 'small' | 'medium' | 'large' | 'huge' | 'gargantuan';
}

// –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—É—Ç–µ–π storage_path –∫ –∞–≤–∞—Ç–∞—Ä–∞–º
export const asset3DAvatars: Record<string, Asset3DAvatar> = {
  // –ú–æ–Ω—Å—Ç—Ä—ã
  'monsters/goblin/low/model.glb': {
    name: "–ì–æ–±–ª–∏–Ω",
    emoji: "üëπ",
    color: "#ffffff",
    backgroundColor: "#4ade80",
    category: "monster",
    size: "small"
  },
  'monsters/orc/low/model.glb': {
    name: "–û—Ä–∫",
    emoji: "üë∫",
    color: "#ffffff", 
    backgroundColor: "#22c55e",
    category: "monster",
    size: "medium"
  },
  'monsters/dragon/low/model.glb': {
    name: "–î—Ä–∞–∫–æ–Ω",
    emoji: "üê≤",
    color: "#ffffff",
    backgroundColor: "#dc2626", 
    category: "monster",
    size: "huge"
  },
  'monsters/skeleton/low/model.glb': {
    name: "–°–∫–µ–ª–µ—Ç",
    emoji: "üíÄ",
    color: "#000000",
    backgroundColor: "#e5e7eb",
    category: "monster",
    size: "medium"
  },
  'monsters/wolf/low/model.glb': {
    name: "–í–æ–ª–∫", 
    emoji: "üê∫",
    color: "#ffffff",
    backgroundColor: "#6b7280",
    category: "monster",
    size: "medium"
  },
  'monsters/golem/low/model.glb': {
    name: "–ì–æ–ª–µ–º",
    emoji: "üóø",
    color: "#ffffff",
    backgroundColor: "#78716c",
    category: "monster",
    size: "large"
  },
  'monsters/fighter/low/model.glb': {
    name: "–í–æ–∏–Ω-–º–æ–Ω—Å—Ç—Ä",
    emoji: "‚öîÔ∏è",
    color: "#ffffff",
    backgroundColor: "#ef4444",
    category: "monster",
    size: "medium"
  },

  // –ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –∏ –≥–µ—Ä–æ–∏
  'characters/fighter/low/model.glb': {
    name: "–í–æ–∏–Ω",
    emoji: "üõ°Ô∏è",
    color: "#ffffff",
    backgroundColor: "#3b82f6",
    category: "character",
    size: "medium"
  },
  'characters/wizard/low/model.glb': {
    name: "–í–æ–ª—à–µ–±–Ω–∏–∫",
    emoji: "üßô‚Äç‚ôÇÔ∏è",
    color: "#ffffff",
    backgroundColor: "#8b5cf6",
    category: "character", 
    size: "medium"
  },
  'characters/rogue/low/model.glb': {
    name: "–†–∞–∑–±–æ–π–Ω–∏–∫",
    emoji: "üó°Ô∏è",
    color: "#ffffff",
    backgroundColor: "#1f2937",
    category: "character",
    size: "medium"
  },
  'characters/cleric/low/model.glb': {
    name: "–ñ—Ä–µ—Ü",
    emoji: "‚õ™",
    color: "#ffffff",
    backgroundColor: "#f59e0b",
    category: "character",
    size: "medium"
  },
  'characters/ranger/low/model.glb': {
    name: "–†–µ–π–Ω–¥–∂–µ—Ä",
    emoji: "üèπ",
    color: "#ffffff",
    backgroundColor: "#059669",
    category: "character",
    size: "medium"
  },
  'characters/paladin/low/model.glb': {
    name: "–ü–∞–ª–∞–¥–∏–Ω",
    emoji: "üõ°Ô∏è‚ö°",
    color: "#ffffff",
    backgroundColor: "#d97706",
    category: "character",
    size: "medium"
  },
  'characters/barbarian/low/model.glb': {
    name: "–í–∞—Ä–≤–∞—Ä",
    emoji: "ü™ì",
    color: "#ffffff",
    backgroundColor: "#dc2626",
    category: "character",
    size: "medium"
  },
  'characters/bard/low/model.glb': {
    name: "–ë–∞—Ä–¥",
    emoji: "üéµ",
    color: "#ffffff",
    backgroundColor: "#ec4899",
    category: "character",
    size: "medium"
  },

  // –°—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –æ–±—ä–µ–∫—Ç—ã
  'structures/tower/low/model.glb': {
    name: "–ë–∞—à–Ω—è",
    emoji: "üè∞",
    color: "#ffffff",
    backgroundColor: "#6b7280",
    category: "structure",
    size: "large"
  },
  'structures/wall/low/model.glb': {
    name: "–°—Ç–µ–Ω–∞",
    emoji: "üß±",
    color: "#ffffff",
    backgroundColor: "#78716c",
    category: "structure",
    size: "large"
  },
  'structures/door/low/model.glb': {
    name: "–î–≤–µ—Ä—å",
    emoji: "üö™",
    color: "#ffffff",
    backgroundColor: "#92400e",
    category: "structure",
    size: "medium"
  },
  'structures/chest/low/model.glb': {
    name: "–°—É–Ω–¥—É–∫",
    emoji: "üì¶",
    color: "#ffffff",
    backgroundColor: "#92400e",
    category: "item",
    size: "small"
  },
  'structures/altar/low/model.glb': {
    name: "–ê–ª—Ç–∞—Ä—å",
    emoji: "‚õ©Ô∏è",
    color: "#ffffff",
    backgroundColor: "#7c2d12",
    category: "structure",
    size: "medium"
  },
  'structures/pillar/low/model.glb': {
    name: "–ö–æ–ª–æ–Ω–Ω–∞",
    emoji: "üèõÔ∏è",
    color: "#ffffff",
    backgroundColor: "#a8a29e",
    category: "structure",
    size: "medium"
  },

  // –ü—Ä–µ–¥–º–µ—Ç—ã –∏ –æ—Ä—É–∂–∏–µ
  'items/sword/low/model.glb': {
    name: "–ú–µ—á",
    emoji: "‚öîÔ∏è",
    color: "#ffffff",
    backgroundColor: "#64748b",
    category: "item",
    size: "small"
  },
  'items/shield/low/model.glb': {
    name: "–©–∏—Ç",
    emoji: "üõ°Ô∏è",
    color: "#ffffff",
    backgroundColor: "#64748b",
    category: "item",
    size: "small"
  },
  'items/bow/low/model.glb': {
    name: "–õ—É–∫",
    emoji: "üèπ",
    color: "#ffffff",
    backgroundColor: "#92400e",
    category: "item",
    size: "small"
  },
  'items/staff/low/model.glb': {
    name: "–ü–æ—Å–æ—Ö",
    emoji: "ü™Ñ",
    color: "#ffffff",
    backgroundColor: "#8b5cf6",
    category: "item",
    size: "small"
  }
};

// –ü–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ storage_path
export const getAsset3DAvatar = (storagePath: string): Asset3DAvatar | null => {
  return asset3DAvatars[storagePath] || null;
};

// –ü–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –ø—É—Ç–∏
export const findAsset3DAvatarByPath = (storagePath: string): Asset3DAvatar | null => {
  // –ò—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  const exact = asset3DAvatars[storagePath];
  if (exact) return exact;

  // –ò—â–µ–º –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é
  for (const [key, avatar] of Object.entries(asset3DAvatars)) {
    if (storagePath.includes(key) || key.includes(storagePath)) {
      return avatar;
    }
  }

  // –ò—â–µ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –≤ –ø—É—Ç–∏
  const path = storagePath.toLowerCase();
  
  if (path.includes('goblin')) return asset3DAvatars['monsters/goblin/low/model.glb'];
  if (path.includes('orc')) return asset3DAvatars['monsters/orc/low/model.glb'];
  if (path.includes('dragon')) return asset3DAvatars['monsters/dragon/low/model.glb'];
  if (path.includes('skeleton')) return asset3DAvatars['monsters/skeleton/low/model.glb'];
  if (path.includes('wolf')) return asset3DAvatars['monsters/wolf/low/model.glb'];
  if (path.includes('golem')) return asset3DAvatars['monsters/golem/low/model.glb'];
  if (path.includes('fighter')) return asset3DAvatars['monsters/fighter/low/model.glb'];
  
  if (path.includes('wizard') || path.includes('mage')) return asset3DAvatars['characters/wizard/low/model.glb'];
  if (path.includes('rogue') || path.includes('thief')) return asset3DAvatars['characters/rogue/low/model.glb'];
  if (path.includes('cleric') || path.includes('priest')) return asset3DAvatars['characters/cleric/low/model.glb'];
  if (path.includes('ranger')) return asset3DAvatars['characters/ranger/low/model.glb'];
  if (path.includes('paladin')) return asset3DAvatars['characters/paladin/low/model.glb'];
  if (path.includes('barbarian')) return asset3DAvatars['characters/barbarian/low/model.glb'];
  if (path.includes('bard')) return asset3DAvatars['characters/bard/low/model.glb'];
  
  if (path.includes('tower')) return asset3DAvatars['structures/tower/low/model.glb'];
  if (path.includes('wall')) return asset3DAvatars['structures/wall/low/model.glb'];
  if (path.includes('door')) return asset3DAvatars['structures/door/low/model.glb'];
  if (path.includes('chest')) return asset3DAvatars['structures/chest/low/model.glb'];
  if (path.includes('altar')) return asset3DAvatars['structures/altar/low/model.glb'];
  if (path.includes('pillar') || path.includes('column')) return asset3DAvatars['structures/pillar/low/model.glb'];
  
  return null;
};

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∞–≤–∞—Ç–∞—Ä—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
export const getAsset3DAvatarsByCategory = (category: Asset3DAvatar['category']): Asset3DAvatar[] => {
  return Object.values(asset3DAvatars).filter(avatar => avatar.category === category);
};

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—É—Ç–∏ storage_path
export const getAllAsset3DPaths = (): string[] => {
  return Object.keys(asset3DAvatars);
};