import React, { useEffect, useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { useCharacter } from '@/contexts/CharacterContext';
import { Character } from '@/types/character';
import { useToast } from '@/hooks/use-toast';
import { useSocket } from '@/contexts/SocketContext';
import CharacterSheet from '@/components/character-sheet/CharacterSheet';
import { getCharacterById } from '@/services/characterService'; // üî• Firestore
import { useCharacterOperations } from '@/hooks/useCharacterOperations';
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogCancel,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
  AlertDialogTrigger,
} from "@/components/ui/alert-dialog";
import { Trash2 } from 'lucide-react';

const CharacterSheetPage = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const { character, setCharacter } = useCharacter();
  const { toast } = useToast();
  const { isConnected, sessionData, connect } = useSocket();
  const { deleteCharacter } = useCharacterOperations();
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [deleting, setDeleting] = useState(false);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ Firestore
  useEffect(() => {
    if (!id) {
      setError("–ù–µ —É–∫–∞–∑–∞–Ω ID –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.");
      return;
    }

    const loadCharacterFromFirestore = async () => {
      setLoading(true);
      try {
        const data = await getCharacterById(id);
        if (!data) {
          setError(`–ü–µ—Ä—Å–æ–Ω–∞–∂ —Å ID ${id} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
        } else {
          setCharacter(data as Character);
          console.log("–ü–µ—Ä—Å–æ–Ω–∞–∂ –∑–∞–≥—Ä—É–∂–µ–Ω:", data);
        }
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:", err);
        setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.");
      } finally {
        setLoading(false);
      }
    };

    loadCharacterFromFirestore();
  }, [id, setCharacter]);

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Å—Å–∏–∏ –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞
  useEffect(() => {
    const savedSession = localStorage.getItem('active-session');
    if (savedSession && isConnected && character) {
      try {
        const parsed = JSON.parse(savedSession);
        if (parsed?.sessionCode) connect(parsed.sessionCode);
      } catch (e) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Å–µ—Å—Å–∏–∏:", e);
      }
    }
  }, [isConnected, character]);

  const handleBack = () => {
    navigate('/characters');
  };

  const handleDeleteCharacter = async () => {
    if (!id) return;
    
    setDeleting(true);
    try {
      await deleteCharacter(id);
      toast({
        title: "–ü–µ—Ä—Å–æ–Ω–∞–∂ —É–¥–∞–ª–µ–Ω",
        description: "–ü–µ—Ä—Å–æ–Ω–∞–∂ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.",
      });
      navigate('/characters');
    } catch (error) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.",
        variant: "destructive",
      });
    } finally {
      setDeleting(false);
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary mx-auto"></div>
          <p className="mt-4 text-lg">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="flex items-center justify-center h-screen">
        <div className="text-center">
          <h2 className="text-xl font-semibold text-red-500 mb-4">–û—à–∏–±–∫–∞</h2>
          <p>{error}</p>
          <Button onClick={handleBack} className="mt-4">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
          </Button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background p-4">
      {/* Session indicator */}
      {isConnected && sessionData && (
        <div className="bg-green-900/20 border border-green-700 rounded-lg p-2 mb-4 text-sm flex justify-between items-center">
          <div>
            <span className="font-medium">–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ —Å–µ—Å—Å–∏–∏: </span>
            <span>{sessionData.name || sessionData.code}</span>
          </div>
          <Button
            size="sm"
            variant="ghost"
            className="text-green-500 hover:text-green-400"
            onClick={() => navigate('/session')}
          >
            –ü–µ—Ä–µ–π—Ç–∏ –≤ —Å–µ—Å—Å–∏—é
          </Button>
        </div>
      )}

      <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4 gap-4">
        <Button variant="outline" onClick={handleBack} className="shrink-0">
          ‚Üê –ö —Å–ø–∏—Å–∫—É –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
        </Button>
        
        <div className="flex flex-wrap gap-2 justify-end">
          <AlertDialog>
            <AlertDialogTrigger asChild>
              <Button variant="destructive" size="sm" disabled={deleting} className="shrink-0">
                <Trash2 className="w-4 h-4 mr-2" />
                –£–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
              </Button>
            </AlertDialogTrigger>
            <AlertDialogContent>
              <AlertDialogHeader>
                <AlertDialogTitle>–£–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞?</AlertDialogTitle>
                <AlertDialogDescription>
                  –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –ü–µ—Ä—Å–æ–Ω–∞–∂ {character?.name || '–±–µ–∑ –∏–º–µ–Ω–∏'} –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.
                </AlertDialogDescription>
              </AlertDialogHeader>
              <AlertDialogFooter>
                <AlertDialogCancel>–û—Ç–º–µ–Ω–∞</AlertDialogCancel>
                <AlertDialogAction 
                  onClick={handleDeleteCharacter}
                  className="bg-destructive text-destructive-foreground hover:bg-destructive/90"
                  disabled={deleting}
                >
                  {deleting ? '–£–¥–∞–ª–µ–Ω–∏–µ...' : '–£–¥–∞–ª–∏—Ç—å'}
                </AlertDialogAction>
              </AlertDialogFooter>
            </AlertDialogContent>
          </AlertDialog>

          {!isConnected ? (
            <Button onClick={() => navigate('/join-session')} className="shrink-0">
              –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏
            </Button>
          ) : (
            <Button onClick={() => navigate('/session')} className="shrink-0">
              –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Å–µ—Å—Å–∏—é
            </Button>
          )}
        </div>
      </div>

      {/* –ü–µ—Ä—Å–æ–Ω–∞–∂ */}
      {character && <CharacterSheet character={character} />}
    </div>
  );
};

export default CharacterSheetPage;
